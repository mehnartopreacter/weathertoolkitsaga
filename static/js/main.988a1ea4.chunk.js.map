{"version":3,"sources":["store/search/actions.js","store/search/selectors.js","store/search/reducer.js","store/forecast/actions.js","components/Search/Search.styles.js","components/Search/Search.jsx","components/Today/Today.styles.js","store/forecast/selectors.js","components/Today/Today.jsx","components/Warning/Warning.styles.js","components/Warning/Warning.jsx","components/Forecast/Forecast.styles.js","components/Forecast/Forecast.jsx","utils/utils.js","components/Weather/Weather.styles.js","components/Loader/Loader.styles.js","components/Loader/Loader.jsx","components/Weather/Weather.jsx","App.js","store/forecast/reducer.js","store/reducer.js","store/forecast/sagas.js","store/search/sagas.js","store/sagas.js","store/index.js","index.js"],"names":["sliceName","REQUEST_LOCATIONS","getSearchInput","state","search","searchInput","selectLocations","locations","map","item","name","id","nanoid","searchSlice","createSlice","initialState","reducers","handleLoading","isLoading","handleError","isFailed","handleLocationsReceived","action","payload","handleSearch","actions","REQUEST_FORECAST","InputWrapper","styled","div","Search","items","useSelector","dispatch","useDispatch","onSearch","string","trim","type","onSelect","autoFocus","placeholder","TodayWrapper","selectToday","forecast","todayCast","selectWeek","weekCast","forecastday","selectIsLoading","selectIsFailed","selectCity","location","Today","city","temp","temp_c","conditionText","condition","text","conditionIcon","icon","realFeel","feelslike_c","windKPH","wind_kph","humidity","className","src","alt","WarningWrapper","Warning","ForecastWrapper","Forecast","slice","date","Date","toLocaleString","weekday","day","avgtemp_c","WeatherWrapper","LoaderWrapper","Loader","Weather","App","forecastSlice","handleForecastReceived","current","rootReducer","combineReducers","forecastReducer","searchReducer","getForecast","weatherWatcher","select","put","call","axios","response","data","console","log","takeLatest","getLocations","searchWatcher","rootSaga","all","store","sagaMiddleware","createSagaMiddleware","middlewareEnhancer","applyMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","run","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.988a1ea4.chunk.js","sourcesContent":["const sliceName = \"search\";\n\nexport const REQUEST_LOCATIONS = `${sliceName}/REQUEST_LOCATIONS`;\nexport const LOCATIONS_RECEIVED = `${sliceName}/LOCATIONS_RECEIVED`;\n\nexport const requestLocations = () => ({\n  type: REQUEST_LOCATIONS,\n});\n\nexport const updateLocations = (locations) => ({\n  type: LOCATIONS_RECEIVED,\n  locations,\n});\n","import { nanoid } from \"@reduxjs/toolkit\";\n\nexport const getSearchInput = (state) => state.search?.searchInput;\n\nexport const selectLocations = (state) => {\n  const locations = state.search?.locations;\n  if (locations) {\n    return locations.map((item) => ({\n      name: item.name,\n      id: nanoid(),\n    }));\n  } else {\n    return [];\n  }\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst searchInitialState = {\n  locations: null,\n  searchInput: \"\",\n};\n\nexport const searchSlice = createSlice({\n  name: \"search\",\n  initialState: searchInitialState,\n  reducers: {\n    handleLoading(state) {\n      state.isLoading = true;\n    },\n    handleError(state) {\n      state.isLoading = false;\n      state.isFailed = true;\n    },\n    handleLocationsReceived(state, action) {\n      state.locations = action.payload;\n      state.isLoading = false;\n      state.isFailed = false;\n    },\n    handleSearch(state, action) {\n      state.searchInput = action.payload;\n    },\n  },\n});\n\nexport const {\n  handleLoading,\n  handleError,\n  handleLocationsReceived,\n  handleSearch,\n} = searchSlice.actions;\n\nexport default searchSlice.reducer;\n","const sliceName = \"forecast\";\n\nexport const REQUEST_FORECAST = `${sliceName}/REQUEST_FORECAST`;\nexport const FORECAST_RECEIVED = `${sliceName}/FORECAST_RECEIVED`;\n\nexport const requestForecast = () => ({\n  type: REQUEST_FORECAST,\n});\n\nexport const updateForecast = (forecast) => ({\n  type: FORECAST_RECEIVED,\n  forecast,\n});\n","import styled from \"styled-components\";\n\nexport const InputWrapper = styled.div`\n  max-width: 80%;\n  min-width: 500px;\n  padding: 10px;\n`;\n","import { ReactSearchAutocomplete } from \"react-search-autocomplete\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requestLocations } from \"../../store/search/actions\";\nimport { selectLocations } from \"../../store/search/selectors\";\nimport { handleSearch } from \"../../store/search/reducer\";\nimport { requestForecast } from \"../../store/forecast/actions\";\nimport { InputWrapper } from \"./Search.styles\";\n\nexport const Search = () => {\n  const items = useSelector(selectLocations);\n  const dispatch = useDispatch();\n\n  const handleOnSearch = (string) => {\n    if (string.trim()) {\n      dispatch(handleSearch(string));\n      dispatch(requestLocations());\n    }\n  };\n\n  const handleOnSelect = () => {\n    dispatch(requestForecast());\n  };\n\n  return (\n    <InputWrapper>\n      <ReactSearchAutocomplete\n        items={items}\n        onSearch={handleOnSearch}\n        onSelect={handleOnSelect}\n        autoFocus\n        placeholder=\"Enter your location..\"\n      />\n    </InputWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const TodayWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: aliceblue;\n  border-radius: 5%;\n  min-width: 600px;\n  padding: 40px;\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n\n  .city {\n    text-align: center;\n    font-size: 50px;\n    margin: 10px;\n  }\n\n  .today-weather {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .temp {\n    font-size: 60px;\n    margin: 10px;\n  }\n\n  .today-cast {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    margin: 10px;\n  }\n\n  .condition-text {\n    margin: 0;\n  }\n\n  .cast-icon {\n    display: flex;\n    justify-content: center;\n  }\n\n  .today-details p {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    font-size: 20px;\n    margin: 0px 10px;\n  }\n`;\n","export const selectToday = (state) => state.forecast.todayCast;\nexport const selectWeek = (state) => state.forecast.weekCast?.forecastday;\nexport const selectIsLoading = (state) => state.forecast.isLoading;\nexport const selectIsFailed = (state) => state.forecast.isFailed;\nexport const selectCity = (state) => state.forecast.location?.name;\n","import { TodayWrapper } from \"./Today.styles\";\nimport { useSelector } from \"react-redux\";\nimport { selectCity, selectToday } from \"../../store/forecast/selectors\";\n\nexport const Today = () => {\n  const todayCast = useSelector(selectToday);\n  const city = useSelector(selectCity);\n\n  const temp = todayCast?.temp_c;\n  const conditionText = todayCast?.condition.text;\n  const conditionIcon = \"https:\" + todayCast?.condition.icon;\n  const realFeel = todayCast?.feelslike_c;\n  const windKPH = todayCast?.wind_kph;\n  const humidity = todayCast?.humidity;\n\n  return (\n    <TodayWrapper>\n      <h2 className=\"city\">{city}</h2>\n      <div className=\"today-weather\">\n        <div className=\"today-temp\">\n          <div className=\"temp\">{temp}℃</div>\n        </div>\n        <div className=\"today-cast\">\n          <p className=\"condition-text\">{conditionText}</p>\n          <div className=\"cast-icon\">\n            <img src={conditionIcon} alt=\"cast icon\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"today-details\">\n        <p>{`Real Feel: ${realFeel} °C`}</p>\n        <p>{`Humidity: ${humidity}%`}</p>\n        <p>{`Wind: ${windKPH} m/s`}</p>\n      </div>\n    </TodayWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const WarningWrapper = styled.div`\n  background-color: lightpink;\n  font-size: 50px;\n  border-radius: 5%;\n  padding: 50px;\n`;\n","import { WarningWrapper } from \"./Warning.styles\";\n\nexport const Warning = () => {\n  return <WarningWrapper>Error!</WarningWrapper>;\n};\n","import styled from \"styled-components\";\n\nexport const ForecastWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  padding: 50px 0;\n\n  .cast-week-item {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    font-size: 18px;\n    background-color: papayawhip;\n    margin: 0 10px;\n    padding: 10px;\n    min-width: 100px;\n    border-radius: 5%;\n    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n  }\n`;\n","import { ForecastWrapper } from \"./Forecast.styles\";\nimport { useSelector } from \"react-redux\";\nimport { selectWeek } from \"../../store/forecast/selectors\";\nimport { convertApiDateToDay } from \"../../utils/utils\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nexport const Forecast = () => {\n  const weekCast = useSelector(selectWeek)?.slice(1, 5);\n\n  return (\n    <ForecastWrapper>\n      {weekCast?.map((item) => (\n        <div key={nanoid()} className=\"cast-week-item\">\n          <p>{convertApiDateToDay(item.date)}</p>\n          <div className=\"cast-week-icon\">\n            <img src={item.day.condition.icon} alt=\"forecast item icon\" />\n          </div>\n          <div>\n            <span>{item.day.avgtemp_c}</span>\n            <span>℃</span>\n          </div>\n        </div>\n      ))}\n    </ForecastWrapper>\n  );\n};\n","export const convertApiDateToDay = (date) => {\n  return new Date(date).toLocaleString(\"en-US\", {\n    weekday: \"long\",\n  });\n};\n","import styled from \"styled-components\";\n\nexport const WeatherWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\n\nexport const LoaderWrapper = styled.div`\n  position: relative;\n`;\n","import { CircleLoading } from \"react-loadingg\";\nimport { LoaderWrapper } from \"./Loader.styles\";\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <CircleLoading />\n    </LoaderWrapper>\n  );\n};\n","import { Search } from \"../Search/Search\";\nimport { Today } from \"../Today/Today\";\nimport { Warning } from \"../Warning/Warning\";\nimport { Forecast } from \"../Forecast/Forecast\";\nimport { WeatherWrapper } from \"./Weather.styles\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectCity,\n  selectIsFailed,\n  selectIsLoading,\n} from \"../../store/forecast/selectors\";\nimport { Loader } from \"../Loader/Loader\";\n\nexport const Weather = () => {\n  const isFailed = useSelector(selectIsFailed);\n  const isLoading = useSelector(selectIsLoading);\n  const city = useSelector(selectCity);\n\n  return (\n    <WeatherWrapper>\n      <Search />\n      {isFailed ? (\n        <Warning />\n      ) : isLoading ? (\n        <Loader />\n      ) : city ? (\n        <div>\n          <Today />\n          <Forecast />\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </WeatherWrapper>\n  );\n};\n","import { Weather } from \"./components/Weather/Weather\";\n\nfunction App() {\n  return <Weather />;\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst forecastInitialState = {\n  isLoading: false,\n  isFailed: false,\n  todayCast: null,\n  weekCast: null,\n  location: null,\n};\n\nexport const forecastSlice = createSlice({\n  name: \"forecast\",\n  initialState: forecastInitialState,\n  reducers: {\n    handleLoading(state) {\n      state.isLoading = true;\n    },\n    handleError(state) {\n      state.isLoading = false;\n      state.isFailed = true;\n    },\n    handleForecastReceived(state, action) {\n      state.todayCast = action.payload.current;\n      state.weekCast = action.payload.forecast;\n      state.location = action.payload.location;\n      state.isLoading = false;\n      state.isFailed = false;\n    },\n  },\n});\n\nexport const { handleLoading, handleError, handleForecastReceived } =\n  forecastSlice.actions;\n\nexport default forecastSlice.reducer;\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport forecastReducer from \"./forecast/reducer\";\nimport searchReducer from \"./search/reducer\";\n\nexport const rootReducer = combineReducers({\n  forecast: forecastReducer,\n  search: searchReducer,\n});\n","import axios from \"axios\";\nimport { put, call, takeLatest, select } from \"redux-saga/effects\";\nimport { REQUEST_FORECAST } from \"./actions\";\nimport { handleLoading, handleError, handleForecastReceived } from \"./reducer\";\nimport { getSearchInput } from \"../search/selectors\";\n\nfunction* getForecast() {\n  try {\n    const searchInput = yield select(getSearchInput);\n\n    yield put(handleLoading());\n\n    const response = yield call(\n      axios,\n      `https://api.weatherapi.com/v1/forecast.json?key=34e791de0bd74b92b08143557210211&q=${searchInput}&days=10&aqi=no&alerts=no`\n    );\n\n    yield put(handleForecastReceived(response.data));\n  } catch (err) {\n    console.log(err);\n    yield put(handleError());\n  }\n}\nexport function* weatherWatcher() {\n  yield takeLatest(REQUEST_FORECAST, getForecast);\n}\n","import axios from \"axios\";\nimport { put, call, takeLatest, select } from \"redux-saga/effects\";\nimport { REQUEST_LOCATIONS } from \"./actions\";\nimport { handleLoading, handleError, handleLocationsReceived } from \"./reducer\";\nimport { getSearchInput } from \"./selectors\";\n\nfunction* getLocations() {\n  try {\n    yield put(handleLoading());\n\n    const searchInput = yield select(getSearchInput);\n\n    const response = yield call(\n      axios,\n      `https://api.weatherapi.com/v1/search.json?key=34e791de0bd74b92b08143557210211&q=${searchInput}`\n    );\n\n    yield put(handleLocationsReceived(response.data));\n  } catch (err) {\n    console.log(err);\n    yield put(handleError());\n  }\n}\nexport function* searchWatcher() {\n  yield takeLatest(REQUEST_LOCATIONS, getLocations);\n}\n","import { all } from \"redux-saga/effects\";\nimport { weatherWatcher } from \"./forecast/sagas\";\nimport { searchWatcher } from \"./search/sagas\";\n\nexport function* rootSaga() {\n  yield all([weatherWatcher(), searchWatcher()]);\n}\n","import createSagaMiddleware from \"redux-saga\";\nimport { createStore, applyMiddleware, compose } from \"@reduxjs/toolkit\";\nimport { rootReducer } from \"./reducer\";\nimport { rootSaga } from \"./sagas\";\n\nexport const configureStore = (initialState) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewareEnhancer = applyMiddleware(sagaMiddleware);\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(middlewareEnhancer)\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}