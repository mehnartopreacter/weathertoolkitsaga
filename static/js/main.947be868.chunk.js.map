{"version":3,"sources":["store/search/actions.js","store/search/reducer.js","store/search/selectors.js","store/forecast/actions.js","components/Search/Search.styles.js","components/Search/Search.jsx","components/Today/Today.styles.js","store/forecast/selectors.js","components/Today/Today.jsx","components/Warning/Warning.styles.js","components/Warning/Warning.jsx","components/Forecast/Forecast.styles.js","components/Forecast/Forecast.jsx","utils/utils.js","components/Weather/Weather.styles.js","components/Loader/Loader.styles.js","components/Loader/Loader.jsx","components/Weather/Weather.jsx","App.js","store/forecast/reducer.js","store/reducer.js","services/weatherService.js","store/forecast/sagas.js","store/search/sagas.js","store/sagas.js","store/index.js","index.js"],"names":["sliceName","getLocations","request","createAction","success","error","searchAdapter","createEntityAdapter","selectId","location","id","sortComparer","a","b","name","localeCompare","searchInitialState","getInitialState","searchInput","isLoading","isFailed","searchSlice","createSlice","initialState","reducers","handleSearch","state","action","payload","extraReducers","builder","addCase","setAll","actions","getSearchInput","search","selectAllLocations","getSelectors","selectAll","getForecast","InputWrapper","styled","div","Search","items","useSelector","dispatch","useDispatch","debouncedHandleOnSearch","useCallback","debounce","string","trim","onSearch","onSelect","autoFocus","placeholder","TodayWrapper","selectToday","forecast","todayCast","selectWeek","weekCast","forecastday","selectIsLoading","selectIsFailed","selectCity","Today","city","temp","temp_c","conditionText","condition","text","conditionIcon","icon","realFeel","feelslike_c","windKPH","wind_kph","humidity","className","src","alt","WarningWrapper","Warning","ForecastWrapper","Forecast","slice","map","item","date","Date","toLocaleString","weekday","day","avgtemp_c","nanoid","WeatherWrapper","LoaderWrapper","Loader","Weather","App","forecastSlice","current","rootReducer","combineReducers","forecastReducer","searchReducer","WEATHER_API_KEY","getForecastData","axios","getLocationSuggestionData","fetchForecast","weatherWatcher","select","call","response","put","data","console","log","takeLatest","fetchLocations","searchWatcher","rootSaga","all","store","sagaMiddleware","createSagaMiddleware","middlewareEnhancer","applyMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","run","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.947be868.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst sliceName = \"search\";\r\n\r\nexport const getLocations = {\r\n  request: createAction(`${sliceName}/GET_LOCATIONS_REQUEST`),\r\n  success: createAction(`${sliceName}/GET_LOCATIONS_REQUEST_SUCCESS`),\r\n  error: createAction(`${sliceName}/GET_LOCATIONS_REQUEST_ERROR`),\r\n};\r\n","import { createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport { getLocations } from \"./actions\";\r\n\r\nexport const searchAdapter = createEntityAdapter({\r\n  selectId: (location) => location.id,\r\n  sortComparer: (a, b) => a.name.localeCompare(b.name),\r\n});\r\n\r\nconst searchInitialState = searchAdapter.getInitialState({\r\n  searchInput: \"\",\r\n  isLoading: false,\r\n  isFailed: false,\r\n});\r\n\r\nexport const searchSlice = createSlice({\r\n  name: \"search\",\r\n  initialState: searchInitialState,\r\n  reducers: {\r\n    handleSearch(state, action) {\r\n      state.searchInput = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getLocations.request, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getLocations.success, (state, action) => {\r\n        searchAdapter.setAll(state, action.payload);\r\n        state.isLoading = false;\r\n        state.isFailed = false;\r\n      })\r\n      .addCase(getLocations.error, (state) => {\r\n        state.isLoading = false;\r\n        state.isFailed = true;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { handleSearch } = searchSlice.actions;\r\n\r\nexport default searchSlice.reducer;\r\n","import { searchAdapter } from \"./reducer\";\r\n\r\nexport const getSearchInput = (state) => state.search?.searchInput;\r\n\r\nexport const { selectAll: selectAllLocations } = searchAdapter.getSelectors(\r\n  (state) => state.search\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst sliceName = \"forecast\";\r\n\r\nexport const getForecast = {\r\n  request: createAction(`${sliceName}/GET_FORECAST_REQUEST`),\r\n  success: createAction(`${sliceName}/GET_FORECAST_REQUEST_SUCCESS`),\r\n  error: createAction(`${sliceName}/GET_FORECAST_REQUEST_ERROR`),\r\n};\r\n","import styled from \"styled-components\";\n\nexport const InputWrapper = styled.div`\n  max-width: 80%;\n  min-width: 500px;\n  padding: 10px;\n`;\n","import { ReactSearchAutocomplete } from \"react-search-autocomplete\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLocations } from \"../../store/search/actions\";\r\nimport { selectAllLocations } from \"../../store/search/selectors\";\r\nimport { handleSearch } from \"../../store/search/reducer\";\r\nimport { getForecast } from \"../../store/forecast/actions\";\r\nimport { InputWrapper } from \"./Search.styles\";\r\nimport { useCallback } from \"react\";\r\nimport { debounce } from \"react-search-autocomplete/dist/utils/utils\";\r\n\r\nexport const Search = () => {\r\n  const items = useSelector(selectAllLocations);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnSearch = (string) => {\r\n    if (string.trim()) {\r\n      dispatch(handleSearch(string));\r\n      dispatch(getLocations.request());\r\n    }\r\n  };\r\n\r\n  const debouncedHandleOnSearch = useCallback(\r\n    debounce(handleOnSearch, 100),\r\n    []\r\n  );\r\n\r\n  const handleOnSelect = () => {\r\n    dispatch(getForecast.request());\r\n  };\r\n\r\n  return (\r\n    <InputWrapper>\r\n      <ReactSearchAutocomplete\r\n        items={items}\r\n        onSearch={debouncedHandleOnSearch}\r\n        onSelect={handleOnSelect}\r\n        autoFocus\r\n        placeholder=\"Enter your location..\"\r\n      />\r\n    </InputWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\n\nexport const TodayWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: aliceblue;\n  border-radius: 5%;\n  min-width: 600px;\n  padding: 40px;\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n\n  .city {\n    text-align: center;\n    font-size: 50px;\n    margin: 10px;\n  }\n\n  .today-weather {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .temp {\n    font-size: 60px;\n    margin: 10px;\n  }\n\n  .today-cast {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    margin: 10px;\n  }\n\n  .condition-text {\n    margin: 0;\n  }\n\n  .cast-icon {\n    display: flex;\n    justify-content: center;\n  }\n\n  .today-details p {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    font-size: 20px;\n    margin: 0px 10px;\n  }\n`;\n","export const selectToday = (state) => state.forecast.todayCast;\nexport const selectWeek = (state) => state.forecast.weekCast?.forecastday;\nexport const selectIsLoading = (state) => state.forecast.isLoading;\nexport const selectIsFailed = (state) => state.forecast.isFailed;\nexport const selectCity = (state) => state.forecast.location?.name;\n","import { TodayWrapper } from \"./Today.styles\";\nimport { useSelector } from \"react-redux\";\nimport { selectCity, selectToday } from \"../../store/forecast/selectors\";\n\nexport const Today = () => {\n  const todayCast = useSelector(selectToday);\n  const city = useSelector(selectCity);\n\n  const temp = todayCast?.temp_c;\n  const conditionText = todayCast?.condition.text;\n  const conditionIcon = \"https:\" + todayCast?.condition.icon;\n  const realFeel = todayCast?.feelslike_c;\n  const windKPH = todayCast?.wind_kph;\n  const humidity = todayCast?.humidity;\n\n  return (\n    <TodayWrapper>\n      <h2 className=\"city\">{city}</h2>\n      <div className=\"today-weather\">\n        <div className=\"today-temp\">\n          <div className=\"temp\">{temp}℃</div>\n        </div>\n        <div className=\"today-cast\">\n          <p className=\"condition-text\">{conditionText}</p>\n          <div className=\"cast-icon\">\n            <img src={conditionIcon} alt=\"cast icon\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"today-details\">\n        <p>{`Real Feel: ${realFeel} °C`}</p>\n        <p>{`Humidity: ${humidity}%`}</p>\n        <p>{`Wind: ${windKPH} m/s`}</p>\n      </div>\n    </TodayWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const WarningWrapper = styled.div`\n  background-color: lightpink;\n  font-size: 50px;\n  border-radius: 5%;\n  padding: 50px;\n`;\n","import { WarningWrapper } from \"./Warning.styles\";\n\nexport const Warning = () => {\n  return <WarningWrapper>Error!</WarningWrapper>;\n};\n","import styled from \"styled-components\";\n\nexport const ForecastWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  padding: 50px 0;\n\n  .cast-week-item {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    font-size: 18px;\n    background-color: papayawhip;\n    margin: 0 10px;\n    padding: 10px;\n    min-width: 100px;\n    border-radius: 5%;\n    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n  }\n`;\n","import { ForecastWrapper } from \"./Forecast.styles\";\nimport { useSelector } from \"react-redux\";\nimport { selectWeek } from \"../../store/forecast/selectors\";\nimport { convertApiDateToDay } from \"../../utils/utils\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nexport const Forecast = () => {\n  const weekCast = useSelector(selectWeek)?.slice(1, 5);\n\n  return (\n    <ForecastWrapper>\n      {weekCast?.map((item) => (\n        <div key={nanoid()} className=\"cast-week-item\">\n          <p>{convertApiDateToDay(item.date)}</p>\n          <div className=\"cast-week-icon\">\n            <img src={item.day.condition.icon} alt=\"forecast item icon\" />\n          </div>\n          <div>\n            <span>{item.day.avgtemp_c}</span>\n            <span>℃</span>\n          </div>\n        </div>\n      ))}\n    </ForecastWrapper>\n  );\n};\n","export const convertApiDateToDay = (date) => {\n  return new Date(date).toLocaleString(\"en-US\", {\n    weekday: \"long\",\n  });\n};\n","import styled from \"styled-components\";\n\nexport const WeatherWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\n\nexport const LoaderWrapper = styled.div`\n  position: relative;\n`;\n","import { CircleLoading } from \"react-loadingg\";\nimport { LoaderWrapper } from \"./Loader.styles\";\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <CircleLoading />\n    </LoaderWrapper>\n  );\n};\n","import { Search } from \"../Search/Search\";\nimport { Today } from \"../Today/Today\";\nimport { Warning } from \"../Warning/Warning\";\nimport { Forecast } from \"../Forecast/Forecast\";\nimport { WeatherWrapper } from \"./Weather.styles\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectCity,\n  selectIsFailed,\n  selectIsLoading,\n} from \"../../store/forecast/selectors\";\nimport { Loader } from \"../Loader/Loader\";\n\nexport const Weather = () => {\n  const isFailed = useSelector(selectIsFailed);\n  const isLoading = useSelector(selectIsLoading);\n  const city = useSelector(selectCity);\n\n  return (\n    <WeatherWrapper>\n      <Search />\n      {isFailed ? (\n        <Warning />\n      ) : isLoading ? (\n        <Loader />\n      ) : city ? (\n        <div>\n          <Today />\n          <Forecast />\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </WeatherWrapper>\n  );\n};\n","import { Weather } from \"./components/Weather/Weather\";\n\nfunction App() {\n  return <Weather />;\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getForecast } from \"./actions\";\r\n\r\nconst forecastInitialState = {\r\n  isLoading: false,\r\n  isFailed: false,\r\n  todayCast: null,\r\n  weekCast: null,\r\n  location: null,\r\n};\r\n\r\nexport const forecastSlice = createSlice({\r\n  name: \"forecast\",\r\n  initialState: forecastInitialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getForecast.request, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getForecast.success, (state, action) => {\r\n        state.todayCast = action.payload.current;\r\n        state.weekCast = action.payload.forecast;\r\n        state.location = action.payload.location;\r\n        state.isLoading = false;\r\n        state.isFailed = false;\r\n      })\r\n      .addCase(getForecast.error, (state) => {\r\n        state.isLoading = false;\r\n        state.isFailed = true;\r\n      });\r\n  },\r\n});\r\n\r\nexport default forecastSlice.reducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport forecastReducer from \"./forecast/reducer\";\nimport searchReducer from \"./search/reducer\";\n\nexport const rootReducer = combineReducers({\n  forecast: forecastReducer,\n  search: searchReducer,\n});\n","import axios from \"axios\";\r\n\r\nconst WEATHER_API_KEY = \"34e791de0bd74b92b08143557210211\";\r\n\r\nexport const getForecastData = (location) => {\r\n  return axios(\r\n    `https://api.weatherapi.com/v1/forecast.json?key=${WEATHER_API_KEY}&q=${location}&days=10&aqi=no&alerts=no`\r\n  );\r\n};\r\n\r\nexport const getLocationSuggestionData = (location) => {\r\n  return axios(\r\n    `https://api.weatherapi.com/v1/search.json?key=${WEATHER_API_KEY}&q=${location}`\r\n  );\r\n};\r\n","import { put, call, takeLatest, select } from \"redux-saga/effects\";\r\nimport { getForecast } from \"./actions\";\r\nimport { getSearchInput } from \"../search/selectors\";\r\nimport { getForecastData } from \"../../services/weatherService\";\r\n\r\nfunction* fetchForecast() {\r\n  try {\r\n    const searchInput = yield select(getSearchInput);\r\n\r\n    const response = yield call(getForecastData, searchInput);\r\n\r\n    yield put(getForecast.success(response.data));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(getForecast.error);\r\n  }\r\n}\r\nexport function* weatherWatcher() {\r\n  yield takeLatest(getForecast.request, fetchForecast);\r\n}\r\n","import { put, call, takeLatest, select } from \"redux-saga/effects\";\r\nimport { getSearchInput } from \"./selectors\";\r\nimport { getLocationSuggestionData } from \"../../services/weatherService\";\r\nimport { getLocations } from \"./actions\";\r\n\r\nfunction* fetchLocations() {\r\n  try {\r\n    const searchInput = yield select(getSearchInput);\r\n\r\n    const response = yield call(getLocationSuggestionData, searchInput);\r\n\r\n    yield put(getLocations.success(response.data));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(getLocations.error);\r\n  }\r\n}\r\nexport function* searchWatcher() {\r\n  yield takeLatest(getLocations.request, fetchLocations);\r\n}\r\n","import { all } from \"redux-saga/effects\";\nimport { weatherWatcher } from \"./forecast/sagas\";\nimport { searchWatcher } from \"./search/sagas\";\n\nexport function* rootSaga() {\n  yield all([weatherWatcher(), searchWatcher()]);\n}\n","import createSagaMiddleware from \"redux-saga\";\nimport { createStore, applyMiddleware, compose } from \"@reduxjs/toolkit\";\nimport { rootReducer } from \"./reducer\";\nimport { rootSaga } from \"./sagas\";\n\nexport const configureStore = (initialState) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewareEnhancer = applyMiddleware(sagaMiddleware);\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(middlewareEnhancer)\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}